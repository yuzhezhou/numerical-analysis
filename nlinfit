#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Jul 29 10:58:32 2018
Numerical Analysis HW4 Q5
@author: yz
"""

import numpy as np
import matplotlib.pyplot as plt

'''
HW4 Q5
'''
x   = [0,np.pi/6,np.pi/4,np.pi/3,np.pi/2]
y   = [a - np.pi/4 for a in x]
y1  = np.arange(-np.pi/4,np.pi/4+np.pi/100,np.pi/100)
z   = np.sin(y)
z1  = np.sin(y1)

p   = np.polyfit(y,z,4)
p1  = np.polyval(p,y1)
err = np.abs(p1-z1)
plt.figure(0)
plt.plot(y1,err,'k')

###############################
n     = 5-1
i     = np.arange(1,6,1)
chev  = np.cos(np.pi*(2*i-1)/(2*(n+1)))
chev1 = -np.pi/4 + (chev+1)*np.pi/4
z2    = np.sin(chev1);
p2    = np.polyfit(chev1,z2,4);
p3    = np.polyval(p2,y1);
err1  = abs(p3-z1);
plt.figure(1)
plt.plot(y1,err1,'k')

################################
yf   = np.asarray(y)
fun1 = np.asarray([a - yf[0] for a in y1])*np.asarray([a - yf[1] for a in y1])*np.asarray([a - yf[2] for a in y1])*\
       np.asarray([a - yf[3] for a in y1])*np.asarray([a - yf[4] for a in y1])
fun2 = np.asarray([a - chev1[0] for a in y1])*np.asarray([a - chev1[1] for a in y1])*np.asarray([a - chev1[2] for a in y1])*\
       np.asarray([a - chev1[3] for a in y1])*np.asarray([a - chev1[4] for a in y1])
#fun1 = np.multiply([a - y[0] for a in y1],[a - y[1] for a in y1],[a - y[2] for a in y1],\
#                   [a - y[3] for a in y1],[a - y[4] for a in y1])
#fun2 = np.multiply([a - chev1[0] for a in y1],[a - chev1[1] for a in y1],[a - chev1[2] for a in y1],\
#                   [a - chev1[3] for a in y1],[a - chev1[4] for a in y1])
err2  = np.abs(fun1-fun2)
plt.figure(2)
plt.plot(y1,err2,'k')
plt.figure(3)
plt.plot(y1,fun1,'r')
plt.plot(y1,fun2,'b')